name: Application CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency: ${{ github.workflow }}

env:
  PROJECT_ID: citric-shine-378115 # GCP project ID
  GAR_LOCATION: us-central1       # GCP Artifact Registry region
  REPOSITORY: demo-app            # GCP Artifact Registry docker repository naame
  IMAGE_NAME: demo-app            # Docker image name
  SONAR_ORG_ID: devops-sathsara
  SONAR_PROJECT_ID: devops-sathsara_app-springboot-ci-cd
  SONAR_HOST: https://sonarcloud.io

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # supported distributions: https://github.com/actions/setup-java#supported-distributions
          java-version: '17'
          cache: 'maven'

      # This step can be removed if Automatic Analysis (recommended) is enabled - https://docs.sonarcloud.io/advanced-setup/automatic-analysis/
      - name: Analyze with SonarCloud
        run: mvn -B verify sonar:sonar -Dsonar.organization=${{ env.SONAR_ORG_ID }} -Dsonar.projectKey=${{ env.SONAR_PROJECT_ID }} -Dsonar.host.url=${{ env.SONAR_HOST }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Build with Maven
        run: mvn --batch-mode package --file pom.xml
        
      - name: Run Tests with Maven
        run: mvn test

      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar-artifact
          path: ./target/*.jar
          retention-days: 1

  publish:
    name: Publish
    needs: Build
    runs-on: ubuntu-latest
    # Need below permission for https://github.com/google-github-actions/auth#usage
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate gcloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: projects/234610246542/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: github-action-sa@citric-shine-378115.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
            name: jar-artifact
            path: target/

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: |
             ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
             ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            "JAR_FILE=./target/spring-boot-web.jar"

      - name: Scan Docker Image
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          fail-build: true
          severity-cutoff: critical

      - name: Push to Artifact Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
             ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
             ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            "JAR_FILE=./target/spring-boot-web.jar"
